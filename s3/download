#!/usr/bin/env bash

function download {
    local s3=$1
    local file=$2
    eval file=${file}
    local accessKey=$3
    local secretKey=$4
    local dateTime=$(echo $5 | xargs)
    local verbose=$6
    local dryrun=$7

    local s3Path=${s3#s3://}
    local bucket=${s3Path%%/*}
    local path=${s3Path#*/}

    if [[ "${s3}" == "${s3Path}" ]]; then
        echo "Error: destination ${s3} is not correct"
        echo "An s3 url looks like this:  s3://<bucket>/<object>"
        exit 1
    fi

    if [[ "${dateTime}" == "" ]]; then
        dateTime=$(date -u +"%Y%m%dT%H%M%SZ")
    fi

    local url=https://s3.amazonaws.com/${bucket}/${path}
    declare -a headers

    verboseTmp=''
    if [[ "${verbose}" != "" ]]; then
        verboseTmp="/tmp/$$.get.tmp"
    fi

    local signature=$(createSignature GET "${url}" "${accessKey}" "${secretKey}" ${dateTime} 3600 's3' 'us-east-1' 1 "${verboseTmp}" headers[@])

    if [[ "${verbose}" != "" ]]; then
        cat ${verboseTmp} > ${verbose}
        cat - <<IntermediateValuese > ${verbose}

S3:             ${s3}
File:           ${file}
Prt:            ${s3Path}
Bucket:         ${bucket}
Path:           ${path}

dateTime:       ${dateTime}

URL:            ${url}
signature:      ${signature}


IntermediateValuese
    local id=$$
    if [[ ${dryrun} == 1 ]]; then
        id=dryrun
    fi
    local response="/tmp/${id}.response"
    echo                >> ${verbose}
    echo "DOWNLOAD"     >> ${verbose}
    echo "========"     >> ${verbose}
    echo "curl -o "${file}" --dump-header ${response}.header --header \"${signature}\" --header \"X-Amz-Date: ${dateTime}\" --header \"X-Amz-Content-SHA256: UNSIGNED-PAYLOAD\" ${url}" >> ${verbose}
    fi

    if [[ ${dryrun} == 0 ]]; then
        curl -o ${file} --dump-header ${response}.header --header "${signature}" --header "X-Amz-Date: ${dateTime}" --header "X-Amz-Content-SHA256: UNSIGNED-PAYLOAD" ${url}
        if [[ "${verbose}" != "" ]]; then
            echo "HEADER"           >> ${verbose}
            echo "======"           >> ${verbose}
            cat ${response}.header  >> ${verbose}
        fi
    fi
}

